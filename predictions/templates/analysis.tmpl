#from wrapper import wrapper
#extends wrapper

#def navigationList
      <ul class="nav navbar-nav">
        <li><a href="home">Home<span class="sr-only">(current)</span></a></li>
        <li><a href="account">Accounts</a></li>
#if $past_deadline
        <li class="active"><a href="analysis">Analysis</a></li>
#end if
      </ul>
      <ul class="nav navbar-nav navbar-right">
        <li><a href="settings">Settings</a></li>
        <li><p class=navbar-text><span class="label label-primary">$member</span></p></li>
      </ul>
#end def

#attr $inner_id = "analysis"
#def inner
<h3>How the race unfolded</h3>
<div id="race" style="min-width: 350px; height: 400px">
</div>
#if $past_deadline
<h3>Where the money went</h3>
<div id="expenditure" style="min-width: 350px; height: 400px">
</div>
#end if
#end def

#def extra_script_source
<script src="highcharts.js"></script>
#end def

#def extra_script
var analysis = {};
\$(document).ready(function() {
#if $past_deadline
  ## Pie chart showing where the money was spent.
  new Highcharts.Chart({
    chart: {
      renderTo: 'expenditure',
      plotBackgroundColor: null,
      plotBorderWidth: null,
      plotShadow: false,
      style: '"Helvetica Neue",Helvetica,Arial,sans-serif'
    },
    title: { text: null },
    credits: { enabled: false },
    plotOptions: {
      pie: {
        allowPointSelect: true,
        cursor: 'pointer'
      }
    },
    tooltip: {
      formatter: function() {
        var pounds = (this.point.y / 100);
        pounds = ((pounds % 1) === 0) ? pounds : pounds.toFixed(2);
        return this.point.name + " \xa3" + pounds;
      }
    },
    series: [{
      type: 'pie',
      name: 'Total cash spent',
      data: $expenditure
    }]
  });
#end if

  ## Graph showing how the race unfolded.
  analysis.race = new Highcharts.Chart({
    chart: {
      renderTo: 'race',
      zoomType: 'xy',
      spacingRight: 20
    },
    title: { text: null },
    credits: { enabled: false },
    xAxis: { type: 'datetime' },
    yAxis: {
      labels: {
        formatter: function() {
          var pounds = (this.value / 100);
          return "\xa3" + pounds;
        }
      },
      title: { text: null }
    },
    tooltip: {
      formatter: function() {
        var date = new Date(this.x);
        var pounds = (this.y / 100).toFixed(2);
        format = "<span style=\"font-size: 10px\">" + date.toLocaleDateString() + "</span><br />" +
        "<span style=\"color: " + this.series.color + "\">" + this.series.name + ": </span>" +
        "<b>\xa3" + pounds + "</b>";
        return format;
      }
    },
    series: $race
  });
});
#end def
